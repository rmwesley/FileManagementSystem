import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */

public class App {
	public String getGreeting() {
		return "Hello World!";
	}

	// Create a method for searching a file in a file tree
	public static String searchFile(String fileName, String dirName) throws IOException {
		// Use of NIO to list all files in the directory
		Path dir = Paths.get(dirName);

		// Check if the file exists
		List<Path> matches;
		try (Stream<Path> walk = Files.walk(dir)) {
			matches = walk
					.filter(Files::isReadable) // read permission
					.filter(Files::isRegularFile) // is a file
					.filter(p -> p.getFileName().toString().equalsIgnoreCase(fileName))
					.collect(Collectors.toList());
		}

		// If the file does not exist
		if (matches.size() == 0) {
			throw new FileNotFoundException("File does not exist in the directory");
		}

		if (matches.size() > 1) {
			throw new FileNotFoundException("Several files with the same name exist in the directory");
		}
		return matches.get(0).toString();
	}

	// Create a directory with the app
	public static void createDir(String dirPath) throws IOException {
		Path dir = Paths.get(dirPath);
		// If the directory already exists
		if (Files.exists(dir)) {
			throw new IOException("Directory already exists");
		}

		// Create the directory
		Path directory = Files.createDirectory(dir);

		// Output the directory
		System.out.println("Directory created: " + directory);
	}

	public static String list(String dirName) {
		StringBuilder sb = new StringBuilder();
		Path dirPath = Path.of(dirName);
		if (Files.exists(dirPath) && Files.isDirectory(dirPath)) {
			File[] files = dirPath.toFile().listFiles();
			for (File file : files) {
				sb.append(file.getName()).append(" : ").append(file.length()).append(" bytes\n");
			}
		}
		return sb.toString();
	}
	//public static String list(String dirPath) throws IOException {
	//	Path dir = Path.of(dirPath);
	//	if (Files.exists(dir)) {
	//		return Files.walk(dir)
	//				.filter(Files::isDirectory)
	//				.map(file -> file.getFileName() + " : " + Files.size(file) + " bytes\n")
	//				.collect(Collectors.joining());
	//	}
	//	throw new FileNotFoundException("Directory does not exist");
	//}

	public static void main(String[] args) throws IOException {
		if (args[0].equals("find")) {
			System.out.println(searchFile(args[1], args[2]));
			return;
		}
		if (args[0].equals("ls")) {
			System.out.println(list(args[1]));
			return;
		}
		if (args[0].equals("mkdir")) {
			createDir(args[1]);
			return;
		}
	}

}